local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Testing script",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "HaiDong Hub" ,
   LoadingSubtitle = "by Haidong",
   ShowText = "Rayfield", -- for mobile users to unhide rayfield, change if you'd like
   Theme = "Amethyst", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   ToggleUIKeybind = "K", -- The keybind to toggle the UI visibility (string like "K" or Enum.KeyCode)

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "HaiDong"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = true, -- Set this to true to use our key system
   KeySettings = {
      Title = "HaiDong hub",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local MainTab = Window:CreateTab("Main", 4483362458) -- Title, Image
local MainSection = MainTab:CreateSection("funcion famous")

local Button = MainTab:CreateButton({
   Name = "inf jump",
   Callback = function()
   -- The function that takes place when the button is pressedlocal
InfiniteJumpEnabled = true
game:GetService("UserInputService").JumpRequest:connect(function()
	if InfiniteJumpEnabled then
		game:GetService"Players".LocalPlayer.Character:FindFirstChildOfClass'Humanoid':ChangeState("Jumping")
	end
end)
   end,
})

local noclip = false
local NoclipButton = MainTab:CreateButton({
   Name = "Toggle Noclip",
   Callback = function()
       noclip = not noclip
       Rayfield:Notify({
           Title = "Noclip",
           Content = noclip and "Noclip ON" or "Noclip OFF",
           Duration = 2
       })
       game:GetService("RunService").Stepped:Connect(function()
           if noclip and game.Players.LocalPlayer.Character then
               for _, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
                   if v:IsA("BasePart") and v.CanCollide == true then
                       v.CanCollide = false
                   end
               end
           end
       end)
   end
})

local AimbotEnabled = false

local AimbotButton = MainTab:CreateButton({
   Name = "Aimbot",
   Callback = function()
      AimbotEnabled = not AimbotEnabled
      Rayfield:Notify({
         Title = "Aimbot",
         Content = AimbotEnabled and "Aimbot ON" or "Aimbot OFF",
         Duration = 2
      })
      if AimbotEnabled then
         local RunService = game:GetService("RunService")
         local Players = game:GetService("Players")
         local LocalPlayer = Players.LocalPlayer
         local Camera = workspace.CurrentCamera
         local aimConnection

         aimConnection = RunService.RenderStepped:Connect(function()
            if not AimbotEnabled then
               if aimConnection then
                  aimConnection:Disconnect()
               end
               return
            end
            local closest = nil
            local shortest = math.huge
            for _, plr in ipairs(Players:GetPlayers()) do
               if plr ~= LocalPlayer and plr.Character and plr.Character:FindFirstChild("Head") then
                  local pos, onScreen = Camera:WorldToViewportPoint(plr.Character.Head.Position)
                  if onScreen then
                     local dist = (Vector2.new(pos.X, pos.Y) - Vector2.new(Camera.ViewportSize.X/2, Camera.ViewportSize.Y/2)).Magnitude
                     if dist < shortest then
                        shortest = dist
                        closest = plr
                     end
                  end
               end
            end
            if closest and closest.Character and closest.Character:FindFirstChild("Head") then
               Camera.CFrame = CFrame.new(Camera.CFrame.Position, closest.Character.Head.Position)
            end
         end)
      end
   end
})
