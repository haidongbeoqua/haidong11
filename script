local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Hai Dong Hub",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "Script Cao Binh Dau Tien",
   LoadingSubtitle = "by Hoang Hai Dong",
   ShowText = "Rayfield", -- for mobile users to unhide rayfield, change if you'd like
   Theme = "Amethyst", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   ToggleUIKeybind = "K", -- The keybind to toggle the UI visibility (string like "K" or Enum.KeyCode)

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "testinghub"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local MainTab = Window:CreateTab("Main", nil) -- Title, Image
local MainSection = MainTab:CreateSection("Main")

Rayfield:Notify({
   Title = "You executed the script",
   Content = "use it",
   Duration = 3,
   Image = 13047715178,
   Actions = { -- Notification Buttons
      Ignore = {
         Name = "Ok",
         Callback = function()
         print("The user tapped Okay!")
      end
   },
},
})

local Button = MainTab:CreateButton({
   Name = "Infinite Jump",
   Callback = function()
       --Toggles the infinite jump between on or off on every script 
local InfiniteJumpEnabled = true
game:GetService("UserInputService").JumpRequest:connect(function()
	if InfiniteJumpEnabled then
		game:GetService"Players".LocalPlayer.Character:FindFirstChildOfClass'Humanoid':ChangeState("Jumping")
	end
end)
   end,
})

local noclip = false
local NoclipButton = MainTab:CreateButton({
   Name = "Toggle Noclip",
   Callback = function()
       noclip = not noclip
       Rayfield:Notify({
           Title = "Noclip",
           Content = noclip and "Noclip ON" or "Noclip OFF",
           Duration = 2
       })
       game:GetService("RunService").Stepped:Connect(function()
           if noclip and game.Players.LocalPlayer.Character then
               for _, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
                   if v:IsA("BasePart") and v.CanCollide == true then
                       v.CanCollide = false
                   end
               end
           end
       end)
   end
})

local SpeedBoostButton = MainTab:CreateButton({
   Name = "Speed Boost",
   Callback = function()
       local player = game.Players.LocalPlayer
       if player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
           player.Character:FindFirstChildOfClass("Humanoid").WalkSpeed = 100 -- Change 100 to your desired speed
           Rayfield:Notify({
               Title = "Speed Boost",
               Content = "WalkSpeed set to 100!",
               Duration = 2
           })
       end
   end,
})

local TPToHighButton = MainTab:CreateButton({
   Name = "TP to High",
   Callback = function()
      local player = game.Players.LocalPlayer
      if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
         local hrp = player.Character.HumanoidRootPart
         hrp.CFrame = hrp.CFrame + Vector3.new(0, 200, 0) -- Teleport 200 studs upward
         Rayfield:Notify({
            Title = "Teleported!",
            Content = "You have been teleported high up!",
            Duration = 2
         })
      end
   end,
})

local TPDownButton = MainTab:CreateButton({
   Name = "Go Down",
   Callback = function()
      local player = game.Players.LocalPlayer
      if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
         local hrp = player.Character.HumanoidRootPart
         hrp.CFrame = hrp.CFrame + Vector3.new(0, -200, 0) -- Teleport 200 studs downward
         Rayfield:Notify({
            Title = "Teleported!",
            Content = "You have been teleported down!",
            Duration = 2
         })
      end
   end,
})
